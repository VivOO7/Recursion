void swap(int *x,int *y){
    int temp=*x;
    *x=*y;
    *y=temp;
}


int partition(int input[], int si, int ei){
   int x=input[si];
    int count=0;
    for(int i=si+1; i<=ei; i++){
        if(x>=input[i]) count++;
    }
    
    
    
    int swap=input[count+si];
    input[count+si]=input[si];
    input[si]=swap;
    int i=si, j=ei;
    while(i<(count+si) && j>(count+si)){
     if(input[i]<=x){
            i++;
     }
      else if(input[j]>x)
            j--;
      else{
            int temp=input[i];
            input[i]=input[j];
            input[j]=temp;
            i++;
            j--;
        }       
    }
    return count+si;
}


void helper(int input[], int si, int ei){
    if(si>=ei) return;
        int dev= partition(input,si,ei);
    helper(input,si,dev-1);
     helper(input,dev+1,ei);


}

void quickSort(int input[], int n) {
  /* Don't write main().
     Don't read input, it is passed as function argument.
     Change in the given array itself.
     Taking input and printing output is handled automatically.
  */
        if(n==0 || n==1) return;
        int si=0;
    int ei=n-1;
    helper(input,si,ei);
}
